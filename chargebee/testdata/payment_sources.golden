# Generated by goldga. DO NOT EDIT.
[snapshots]
"Chargebee payment sources when accessing payment sources API should be able list payment sources" = '''
([]chargebee.PaymentSource) (len=5) {
 (chargebee.PaymentSource) {
  Id: (string) "",
  ResourceVersion: (int64) 0,
  UpdatedAt: (uint64) 0,
  CreatedAt: (uint64) 0,
  CustomerId: (string) "",
  Type: (enums.TypeEnum) "",
  ReferenceId: (string) "",
  Status: (enums.StatusEnum) "",
  Gateway: (enums.GatewayEnum) "",
  GatewayAccountId: (string) "",
  IpAddress: (string) "",
  IssuingCountry: (string) "",
  Deleted: (bool) false,
  BusinessEntityId: (string) "",
  Card: (models.Card) {
  },
  BankAccount: (models.BankAccount) {
  },
  Boleto: (models.CustVoucherSource) {
  },
  BillingAddress: (models.BillingAddress) {
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  AmazonPayment: (models.AmazonPayment) {
  },
  Upi: (models.Upi) {
  },
  Paypal: (models.Paypal) {
  },
  Venmo: (models.Venmo) {
  },
  KlarnaPayNow: (models.KlarnaPayNow) {
  },
  Mandates: ([]models.Mandate) <nil>
 },
 (chargebee.PaymentSource) {
  Id: (string) "",
  ResourceVersion: (int64) 0,
  UpdatedAt: (uint64) 0,
  CreatedAt: (uint64) 0,
  CustomerId: (string) "",
  Type: (enums.TypeEnum) "",
  ReferenceId: (string) "",
  Status: (enums.StatusEnum) "",
  Gateway: (enums.GatewayEnum) "",
  GatewayAccountId: (string) "",
  IpAddress: (string) "",
  IssuingCountry: (string) "",
  Deleted: (bool) false,
  BusinessEntityId: (string) "",
  Card: (models.Card) {
  },
  BankAccount: (models.BankAccount) {
  },
  Boleto: (models.CustVoucherSource) {
  },
  BillingAddress: (models.BillingAddress) {
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  AmazonPayment: (models.AmazonPayment) {
  },
  Upi: (models.Upi) {
  },
  Paypal: (models.Paypal) {
  },
  Venmo: (models.Venmo) {
  },
  KlarnaPayNow: (models.KlarnaPayNow) {
  },
  Mandates: ([]models.Mandate) <nil>
 },
 (chargebee.PaymentSource) {
  Id: (string) "",
  ResourceVersion: (int64) 0,
  UpdatedAt: (uint64) 0,
  CreatedAt: (uint64) 0,
  CustomerId: (string) "",
  Type: (enums.TypeEnum) "",
  ReferenceId: (string) "",
  Status: (enums.StatusEnum) "",
  Gateway: (enums.GatewayEnum) "",
  GatewayAccountId: (string) "",
  IpAddress: (string) "",
  IssuingCountry: (string) "",
  Deleted: (bool) false,
  BusinessEntityId: (string) "",
  Card: (models.Card) {
  },
  BankAccount: (models.BankAccount) {
  },
  Boleto: (models.CustVoucherSource) {
  },
  BillingAddress: (models.BillingAddress) {
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  AmazonPayment: (models.AmazonPayment) {
  },
  Upi: (models.Upi) {
  },
  Paypal: (models.Paypal) {
  },
  Venmo: (models.Venmo) {
  },
  KlarnaPayNow: (models.KlarnaPayNow) {
  },
  Mandates: ([]models.Mandate) <nil>
 },
 (chargebee.PaymentSource) {
  Id: (string) "",
  ResourceVersion: (int64) 0,
  UpdatedAt: (uint64) 0,
  CreatedAt: (uint64) 0,
  CustomerId: (string) "",
  Type: (enums.TypeEnum) "",
  ReferenceId: (string) "",
  Status: (enums.StatusEnum) "",
  Gateway: (enums.GatewayEnum) "",
  GatewayAccountId: (string) "",
  IpAddress: (string) "",
  IssuingCountry: (string) "",
  Deleted: (bool) false,
  BusinessEntityId: (string) "",
  Card: (models.Card) {
  },
  BankAccount: (models.BankAccount) {
  },
  Boleto: (models.CustVoucherSource) {
  },
  BillingAddress: (models.BillingAddress) {
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  AmazonPayment: (models.AmazonPayment) {
  },
  Upi: (models.Upi) {
  },
  Paypal: (models.Paypal) {
  },
  Venmo: (models.Venmo) {
  },
  KlarnaPayNow: (models.KlarnaPayNow) {
  },
  Mandates: ([]models.Mandate) <nil>
 },
 (chargebee.PaymentSource) {
  Id: (string) "",
  ResourceVersion: (int64) 0,
  UpdatedAt: (uint64) 0,
  CreatedAt: (uint64) 0,
  CustomerId: (string) "",
  Type: (enums.TypeEnum) "",
  ReferenceId: (string) "",
  Status: (enums.StatusEnum) "",
  Gateway: (enums.GatewayEnum) "",
  GatewayAccountId: (string) "",
  IpAddress: (string) "",
  IssuingCountry: (string) "",
  Deleted: (bool) false,
  BusinessEntityId: (string) "",
  Card: (models.Card) {
  },
  BankAccount: (models.BankAccount) {
  },
  Boleto: (models.CustVoucherSource) {
  },
  BillingAddress: (models.BillingAddress) {
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  AmazonPayment: (models.AmazonPayment) {
  },
  Upi: (models.Upi) {
  },
  Paypal: (models.Paypal) {
  },
  Venmo: (models.Venmo) {
  },
  KlarnaPayNow: (models.KlarnaPayNow) {
  },
  Mandates: ([]models.Mandate) <nil>
 }
}
'''
