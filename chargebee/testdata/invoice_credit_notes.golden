# Generated by goldga. DO NOT EDIT.
[snapshots]
"Chargebee credit notes test when accessing credit notes API should be able list credit notes" = '''
([]chargebee.CreditNote) (len=2) {
 (chargebee.CreditNote) {
  Id: (string) "",
  CustomerId: (string) "",
  SubscriptionId: (string) "",
  ReferenceInvoiceId: (string) "",
  Type: (enums.TypeEnum) "",
  ReasonCode: (enums.ReasonCodeEnum) "",
  Status: (enums.StatusEnum) "",
  VatNumber: (string) "",
  Date: (uint64) 0,
  PriceType: (enums.PriceTypeEnum) "",
  CurrencyCode: (string) "",
  Total: (uint64) 0,
  AmountAllocated: (uint64) 0,
  AmountRefunded: (uint64) 0,
  AmountAvailable: (uint64) 0,
  RefundedAt: (uint64) 0,
  VoidedAt: (uint64) 0,
  GeneratedAt: (uint64) 0,
  ResourceVersion: (int64) 0,
  UpdatedAt: (uint64) 0,
  Channel: (enums.ChannelEnum) "",
  SubTotal: (uint64) 0,
  SubTotalInLocalCurrency: (uint64) 0,
  TotalInLocalCurrency: (uint64) 0,
  LocalCurrencyCode: (string) "",
  RoundOffAmount: (uint64) 0,
  FractionalCorrection: (uint64) 0,
  Deleted: (bool) false,
  TaxCategory: (string) "",
  LocalCurrencyExchangeRate: (*decimal.Decimal)(<nil>),
  CreateReasonCode: (string) "",
  VatNumberPrefix: (string) "",
  BusinessEntityId: (string) "",
  Einvoice: (models.Einvoice) {
  },
  LineItems: ([]models.LineItem) <nil>,
  Discounts: ([]models.Discount) <nil>,
  LineItemDiscounts: ([]models.LineItemDiscount) <nil>,
  LineItemTiers: ([]models.LineItemTier) <nil>,
  Taxes: ([]models.Tax) <nil>,
  LineItemTaxes: ([]models.LineItemTax) <nil>,
  LinkedRefunds: ([]models.CreditNoteTransaction) <nil>,
  LinkedTaxWithheldRefunds: ([]models.LinkedTaxWithheldRefund) <nil>,
  Allocations: ([]models.AppliedCredit) <nil>,
  ShippingAddress: (models.ShippingAddress) {
   Index: (int) 0,
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  BillingAddress: (models.BillingAddress) {
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  SiteDetailsAtCreation: (models.SiteDetailsAtCreation) {
  },
  TaxOrigin: (models.TaxOrigin) {
  }
 },
 (chargebee.CreditNote) {
  Id: (string) "",
  CustomerId: (string) "",
  SubscriptionId: (string) "",
  ReferenceInvoiceId: (string) "",
  Type: (enums.TypeEnum) "",
  ReasonCode: (enums.ReasonCodeEnum) "",
  Status: (enums.StatusEnum) "",
  VatNumber: (string) "",
  Date: (uint64) 0,
  PriceType: (enums.PriceTypeEnum) "",
  CurrencyCode: (string) "",
  Total: (uint64) 0,
  AmountAllocated: (uint64) 0,
  AmountRefunded: (uint64) 0,
  AmountAvailable: (uint64) 0,
  RefundedAt: (uint64) 0,
  VoidedAt: (uint64) 0,
  GeneratedAt: (uint64) 0,
  ResourceVersion: (int64) 0,
  UpdatedAt: (uint64) 0,
  Channel: (enums.ChannelEnum) "",
  SubTotal: (uint64) 0,
  SubTotalInLocalCurrency: (uint64) 0,
  TotalInLocalCurrency: (uint64) 0,
  LocalCurrencyCode: (string) "",
  RoundOffAmount: (uint64) 0,
  FractionalCorrection: (uint64) 0,
  Deleted: (bool) false,
  TaxCategory: (string) "",
  LocalCurrencyExchangeRate: (*decimal.Decimal)(<nil>),
  CreateReasonCode: (string) "",
  VatNumberPrefix: (string) "",
  BusinessEntityId: (string) "",
  Einvoice: (models.Einvoice) {
  },
  LineItems: ([]models.LineItem) <nil>,
  Discounts: ([]models.Discount) <nil>,
  LineItemDiscounts: ([]models.LineItemDiscount) <nil>,
  LineItemTiers: ([]models.LineItemTier) <nil>,
  Taxes: ([]models.Tax) <nil>,
  LineItemTaxes: ([]models.LineItemTax) <nil>,
  LinkedRefunds: ([]models.CreditNoteTransaction) <nil>,
  LinkedTaxWithheldRefunds: ([]models.LinkedTaxWithheldRefund) <nil>,
  Allocations: ([]models.AppliedCredit) <nil>,
  ShippingAddress: (models.ShippingAddress) {
   Index: (int) 0,
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  BillingAddress: (models.BillingAddress) {
   Address: (models.Address) {
    FirstName: (string) "",
    LastName: (string) "",
    Email: (string) "",
    Company: (string) "",
    Phone: (string) "",
    Line1: (string) "",
    Line2: (string) "",
    Line3: (string) "",
    City: (string) "",
    StateCode: (string) "",
    State: (string) "",
    Country: (string) "",
    Zip: (string) "",
    ValidationStatus: (enums.ValidationStatusEnum) ""
   }
  },
  SiteDetailsAtCreation: (models.SiteDetailsAtCreation) {
  },
  TaxOrigin: (models.TaxOrigin) {
  }
 }
}
'''
